/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package finansyx;

import finansyx.commons.Prognostication.Models.LinearModel;
import finansyx.commons.Prognostication.Models.LogarithmicModel;
import finansyx.commons.Prognostication.Models.ExponentialModel;
import finansyx.commons.Prognostication.Models.PotentialModel;
import finansyx.commons.Prognostication.Models.PolynomialModel;
import java.awt.event.KeyEvent;
import finansyx.commons.models.*;
import finansyx.commons.Prognostication.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.*;
/**
 *
 * @author t4r0
 */
public class Pronosticos extends javax.swing.JPanel {

    /**
     * Creates new form Pronosticos
     */
    
    Integer modelIndex = 0;
    ModelManager manager = new ModelManager();
    public Pronosticos() {
        initComponents();
    }
    
    public ArrayList<Integer> getKeys()
    {
        ArrayList<Integer> key = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)tblOrigen.getModel();
        for(int i=0; i < model.getRowCount(); i ++)
        {
            key.add((Integer)model.getValueAt(i, 0));
        }
        return key;
    }
    
    public ArrayList<Integer> getKeys(Integer limite)
    {
         ArrayList<Integer> key = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)tblOrigen.getModel();
        for(int i=0; i < limite; i ++)
        {
            key.add((Integer)model.getValueAt(i, 0));
        }
        return key;
    }
    public ArrayList<Double> getValues()
    {
        ArrayList<Double> value = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)tblOrigen.getModel();
        for(int i=0; i < model.getRowCount(); i ++)
        {
            value.add((Double)model.getValueAt(i, 1));
        }
        return value;
    }
    
    public ArrayList<Double> getValues(Integer limite)
    {
        ArrayList<Double> value = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)tblOrigen.getModel();
        for(int i=0; i < limite; i ++)
        {
            value.add((Double)model.getValueAt(i, 1));
        }
        return value;
    }
    
    private void SetModel(ArrayList<Integer> keys, ArrayList<Double> values)
    {
       
        manager = new ModelManager();
        manager.Add( new LinearModel(keys, values));
        manager.Add(new PolynomialModel(keys, values));
        manager.Add(new ExponentialModel(keys, values));
        manager.Add(new LogarithmicModel(keys, values));
        manager.Add( new PotentialModel(keys, values));   
        tblPronostico.setModel(new ModeloPronostico(manager));
        SetLimites();       
    }
    
    void SetLimites()
    {
         Double confianza = Double.parseDouble(spnrConfianza.getValue().toString()) / 100;
         manager.setConfianza(confianza);
         tblLimite.setModel(new ModeloLimite(manager));
         lblModelo.setText(manager.getSelectedModel().getName());
         modelIndex = manager.getSelectedModelIndex();
    }
    
    void SetLimites(int i)
    {
        manager.setSelectedModel(i);
        tblLimite.setModel(new ModeloLimite(manager));
        lblModelo.setText(manager.getSelectedModel().getName());
    }

    private void CalcularModelos()
    {
        ArrayList<Integer> keys = getKeys();
        ArrayList<Double> values = getValues();
        SetModel(keys, values);
    }
    private void CalcularModelos(Integer limite)
    {
         ArrayList<Integer> keys = getKeys(limite);
        ArrayList<Double> values = getValues(limite);
        SetModel(keys, values);
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrigen = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPronostico = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblLimite = new javax.swing.JTable();
        spnrConfianza = new javax.swing.JSpinner();
        lblModelo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblOrigen.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblOrigen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1),  new Double(0.0)},
                { new Integer(2),  new Double(0.0)},
                { new Integer(3),  new Double(0.0)},
                { new Integer(4),  new Double(0.0)}
            },
            new String [] {
                "AÃ±o", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrigen.setToolTipText("");
        tblOrigen.setRequestFocusEnabled(false);
        tblOrigen.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblOrigenKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrigen);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 120, 300));

        tblPronostico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblPronostico);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, 300));

        tblLimite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tblLimite);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 620, 110));

        spnrConfianza.setModel(new javax.swing.SpinnerNumberModel(95, 50, 100, 1));
        spnrConfianza.setValue(95
        );
        spnrConfianza.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnrConfianzaStateChanged(evt);
            }
        });
        add(spnrConfianza, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, 40, 20));

        lblModelo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblModelo.setForeground(new java.awt.Color(0, 204, 204));
        lblModelo.setText("Pronosticos");
        add(lblModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("Modelos");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Datos");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel4.setText("Confianza");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 370, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tblOrigenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblOrigenKeyPressed
        // TODO add your handling code here:
        try
        {
            DefaultTableModel model = (DefaultTableModel)tblOrigen.getModel();
            int selrow= tblOrigen.getSelectedRow();
            switch(evt.getKeyCode())
            {
                case KeyEvent.VK_ENTER:
                {              
                    if(selrow ==tblOrigen.getRowCount()-1)
                    {
                        int count = tblOrigen.getRowCount();               
                        model.insertRow(count, new Object[]{count+1,0.}); 
                        tblOrigen.editCellAt(selrow+1, 1);
                        CalcularModelos(selrow + 1);
                        return;
                    }
                    else
                    {
                        tblOrigen.editCellAt(-1, -1); 
                        CalcularModelos();
                        return;
                    }
                }      
                case KeyEvent.VK_DELETE:
                {                    
                    model.removeRow(selrow);
                    tblOrigen.editCellAt(-1, -1);                     
                }
                default:
                {
                    model.setValueAt("", selrow, 1);
                }
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Ha ocurrido un error: \n" + e.getMessage());
        }
        
    }//GEN-LAST:event_tblOrigenKeyPressed

    private void spnrConfianzaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnrConfianzaStateChanged
        // TODO add your handling code here:
        SetLimites();
    }//GEN-LAST:event_spnrConfianzaStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JSpinner spnrConfianza;
    private javax.swing.JTable tblLimite;
    private javax.swing.JTable tblOrigen;
    private javax.swing.JTable tblPronostico;
    // End of variables declaration//GEN-END:variables
}
